<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJC+yDSEt8TtjL/O047H27eZz+Ocls7igpDJ
        3GeIwNRNeKu8M1yCkBhMZG8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG6bqGQ+WmH/Q258/1un
        vv5vyOD/dsvh/3zK3v+Dx9j+frnI/3uruv5ymKf3c4yZ4IibosSKmZ6ph5aZj36MjnR1g4VafImKPWx5
        eyNdaGoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFqD
        kZA/a3j+W7rW/lzE5P5bwuL+XMHe/l7A2f5cutL+RIOW/i4/Rv4wO0L+Nj5F/kxVW/4+SFH+Qk5W/kdV
        Xv5QXmb+XGx0/mFyef5pe4H8bX+E7HSEiNF7io23hJKUnI2anH+Ilpdlg4+JSnV+aS9veW4TAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHCzx7tny+b/XMLn/1Ky5f5Qpd7gUq3W1FGuzvpVsMr+U63F/0OFmP5DVGH/XWp0/5OV
        kv6jpaH/Y2Jh/4SEgf51d3X/QUFB/2ZmZP5eX1//MDE1/05SVP43PkL/O0NI/z9LUP5KV17/VWFe/1dd
        Sv9xgX3+eIqK94ucodyYq7C/k6uypabAxoinyM5vtNXbU67T3jqcwsweiau0CAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIHT6+Zpyef/VbXm/0uY52AAAAAAAAAAAEuVtR5Pl7LjUKe9/0ye
        tP44VF7/qKil/66vrP6TlpL/l5mW/6WmpP6am5f/gYF//6eopf6Sko7/UFBP/3FycP57fXr/KSor/y0y
        Nf4uNT3/KCgp/ykqKv8uMDD+LC4w/zU5PP88REr+QlNc/0xqdP9Ygo/+crHC/4bH2P+NzN3+ks/f+5fS
        3+iczdjMmMXMsqXN0mIAAAAAAAAAAAAAAAAAAAAAj8TVFXXL4/5kwuD/T6Dm/0h903ZSf6cEAAAAAFKA
        mC9OiqTpTqC1/0iYrf49ZHP/i5ST/6u3tv6QkY3/pKek/6aurf6gop3/tre0/4mMjP6vsaz/xsS//4uO
        jf5me4b/LCwt/ywtMP4yNjv/KSgo/ykpKv9LTEv+NTc3/ycpKv8vOT/+N0pW/zZRW/9Bj6X+TK/L/061
        0v9QuNX+VrzZ/1W51P9EfI7+RGRs/1d6gowAAAAAAAAAAAAAAAAAAAAAlMXUQWa4z/5cuNT+UqrY/j52
        zf49dbf0P4Ge6kJ9mP5SjqX+S5qt/kKNov4/XWr+Ym11/mBreP5SU1P+dXZy/ldaW/5MTk/+jJqe/lpj
        Zv5rbWr+sLy6/mBlZv47P0P+RkRD/khHRP5PTk3+Q0E//iwrKv5QTk3+XF5c/ikqLP4oKyz+Nl5t/kOd
        tv5DpL7+QqTC/kSny/1CrNL9SbXY/ky82/5Svdn+OWNv/i05PVYAAAAAAAAAAAAAAAAAAAAAdpehbUZ6
        iv5Tp8D/UqrF/1Glw/5Jmbf/SZGp/0mXrf9Hl6v+RIyg/zxzh/5cYmT/fICC/1leYf6nqKT/io6K/11f
        Xv6ws67/dZ24/1BaY/5qbmz/Y3WG/zw+QP4kIib/SEZE/yYlJf49Pj7/TU9O/2BhX/9OTkz+V1hW/yco
        K/8tO0P+PZCp/0Getv9GoLr+SZq4bkiXuQ5NocgTU7DVjE273P9WxN/+XLvQ/j5mch8AAAAAAAAAAAAA
        AAAAAAAAaHqAmS43Pv4+dY3+SI+o/kuWrf5Ll6z+SpSo/kSNof4/gJT+O2p8/iw6Qf4+P0H+kJKQ/o2N
        jP6Sko/+dHJx/nx7ef6Pj43+dnd2/nd8fv5zd3f+Zm1x/lJQT/4kJCb+VVRR/iwqKv4sKyv+Kyoq/isq
        Kv4qKSn+RkdF/hsfIv4rVWT+OY+o/kOcs/5UnbX6ZZyyHAAAAAAAAAAARqXKQ0y42v5bxt7+aMzh5AAA
        AAAAAAAAAAAAAAAAAAAAAAAAWWRoxkRRXP5LWGL/W3B8/050iP44aH7/PGh+/zddbv8wRE/+Mz9J/zVH
        Vf4fHyH/d39+/3mAf/6CiIf/kZeW/4iPjv6jp6b/Q0VH/0hVXv45RE3/O0ZP/z09Pf4tLCz/UFBO/y4u
        Lv4zNTT/LS0t/zAwMf8rLCz+Ly0r/xUVFv8mS1v+NIih/z6Vrf9GmLH+T5Gr6zyHpaYujK6xNZ/D90+5
        1v9ew9r+bcrdrAAAAAAAAAAAAAAAAAAAAAB1gIICU1pd8Kysp/6IjIn/rbKw/3uCgf5laWj/mqCf/3N1
        c/82NDT+RkZI/09UV/4sLy7/T1FQ/1JUU/5ZXFv/X2Ni/2VqaP5nbWv/LjpC/zM+SP4uLC3/JyYn/x4b
        G/43NTP/Nzc2/zExMf4zNDT/MDIy/ywtLf8lJSb+ODk5/x0jKP8dKTD+MXaQ/ziKov89k6r+P5Wt/zaT
        rv82mrf+RarF/0+zzP9buMz+bL3OcwAAAAAAAAAAAAAAAAAAAACUo6QgQURH/pmalv6Rko7+pKmn/n1/
        ff6Bgn7+iI+P/mVlY/54d3b+sLGv/l9fX/5FRkX+R0ZF/kdFRf5IRkX+RENC/kNBQf49Pjz+U1FP/oWE
        gP5oZ2T+KSgp/h8cHP5EQD3+MTEx/jM0NP4uLy/+LzAw/igoKP4eHh7+PDo3/hUREf4WFBP+Jj9M/jFx
        i/43gpr+O42k/jySqv5BmLD+Q5y0/kiftP5Ijpz+QWp0OwAAAAAAAAAAAAAAAAAAAACToaJMRkVG/5yd
        mf6/wr3/paqn/0lSVv6Rk5H/tLm3/3d5dv9cXmD+kqCi/zg4Of5HRkX/XVtZ/1VTUf6Ri4P/lo+H/4N/
        eP5KSEj/OTk5/1JRUv5OT03/VlVT/z05OP4gGhr/JCIj/yopKv4mJSb/Kisr/yEfH/80MjD+IR0c/xUR
        Ef8WEhH+FxQU/yErM/8rTWL+L2R//zFuiv8ycIv+MGN7/ypKV/8oLjH4Jy80CQAAAAAAAAAAAAAAAAAA
        AAB/jI15WFhY/5WWk/6gop7/qrSz/059o/6QoKb/hIiI/25tbP+UnqH+Zo2p/z4+P/5iX1z/vLOl/4N+
        dv6hmpD/lZCH/4qEff55dnD/YV9c/1xbWv5wb2z/bm9s/15fWv4VDw//TEpF/0VGQv46Ojf/QEA7/z0+
        Ov85OTb+QUA8/zU0Mf8cFxf+FBER/xQSEv8WFBT+GRcY/xocHv8cGxz+HRkZ/yw6Rf8wMDLIAAAAAAAA
        AAAAAAAAAAAAAAAAAABsdnilO0BF/mltcf66vbn+sLay/khRV/6gpKH+qamk/n1+ff6IiYn+goOD/m1s
        av5mY1/+mZSL/pKMg/6LhX3+i4eA/lJPTv5UUlD+aGZl/oaNjf5EQ0P+IB8h/iEjJf4SDQ/+Lywp/hIO
        D/4PCgv+DgoL/hENDv4RDg/+EA8P/iAeHf4yMi/+Ozo3/khFQv4+Pzz+PDs5/kZGQv5HR0P+QUE//kND
        Qf5CQ0OPAAAAAAAAAAAAAAAAAAAAAAAAAABfaGnSO0JH/2Zucf6Wmpj/oKil/4eHgv61vbz/dIKJ/01Z
        Yf9OU1j+Q1Bc/zw7PP6Chob/dHh4/3F0dP5sbW3/ZWZk/1NUVP5EREX/YXF8/0VRWv4xMDL/Njo8/5eh
        oP4cHh7/CQcH/xAMDP4OCgr/DAoK/w8MDP8RDw/+Dw0N/w8NDf8QDg7+EA8Q/xAQEP8RERL+ERER/xAR
        Ef8QEBD+EhER/yEhIf9MT05XAAAAAAAAAAAAAAAAAAAAAH6LiwVWXF35eXl3/6yuqP6ws67/en17/2Zk
        Yf6orKj/lZeT/3p7ef+YmJX+cHBv/0E+P/5oamv/f4CB/4SHiP6HjIz/h42P/4iNjv5hYF//gZCZ/0JM
        V/43RVH/ICAg/zQ3N/4RDQ3/DQkK/xENDv4RDA3/EAsM/xANDf8TERH+EQ4P/xEPEP8TFhb+FBkb/xQc
        Hv8THSD+Ehwf/xEaHP8TFhf+FhcX/xgXF/8oKy1DAAAAAAAAAAAAAAAAAAAAAJamqCxCR0j+oaGe/qap
        pP7L0s/+VXaN/ml+i/6kq6v+YWJg/l5eXv6Tl5j+jI+S/oCBg/50dnb+a2pq/lxcXv4wMDH+MTI0/jEw
        MP5aV1b+V1ZV/lpZV/4oKCr+NDg5/i0uL/4fHR7+DgsL/hMREf4QDg7+EQ8P/hIQEP4SERL+ERER/hEW
        F/4UHB/+FR4i/holJv4WIiX+FCIm/hIhJv4RISX+Fh0e/hwdHf4uMjNXAAAAAAAAAAAAAAAAAAAAAI2d
        oFlZWFj/hYaE/6yuqf6rr6v/an+N/6Ctsv6PkY7/YWJg/0tKSv97goH+fIKB/251df53fHv/f4OC/3N4
        ef4xLzH/Ly0u/ztJVf40OkD/Li0u/ywrLf4iIiT/m6Ok/ycoKv4nJif/LCkq/ywpKf42MzT/Mi8v/y4r
        K/8tKiv+JCUm/x8jJf8eJCb+HCQm/x4nKf8fKCr+HSYp/xUkKP8VJSn+FyUo/yMoKf85PD5qAAAAAAAA
        AAAAAAAAAAAAAH2LjYViYWH/nqCd/7u/u/67xsX/M09o/5Gamv5xc3L/V1VU/zg4OP9GSEf+RklH/0FD
        Q/5ER0b/R0tK/0pNTP4sKSr/MC4w/y4sLv4sKiz/Li0u/ywqK/4iICH/Hh0e/yMjJP4fHh//LCoq/zQy
        Mv44NTb/NjM0/zUzM/81NDT+NjQ1/zYzNP83NDT+OTY2/zc1Nf8zMjP+Li8x/youMP8mLS/+Jy4v/zA0
        NP9DREZ7AAAAAAAAAAAAAAAAAAAAAG54erE+Rk3+anmE/qOmov63vbr+U3mW/qOsq/6CgX3+Pj4+/jw8
        O/47Ojr+Ojk5/jY1Nv4zMjL+Ly4u/isqKv4tLC3+MjAx/jEuL/4vLS7+MS8w/iooKf4qLjD+Ymlq/jUz
        M/4wLC3+LSkq/jQxMv4xLzD+Li0u/i4rLf4xLi7+NTQ0/jg2Nv46Njf+Ozc4/jw4OP4wLC3+JyMk/igm
        J/4vLCz+MC0u/jAvL/49PD5gAAAAAAAAAAAAAAAAAAAAAGVsbt6urqn/nJ2a/7K2tf58hIT/YWBe/6Cm
        o/6ChID/LSwu/zw7O/89Q0b+Pj9A/0FGSf4/Q0b/ODc3/zY1Nf4vLS7/V1VU/1NRUf42NDX/NDEy/ysp
        Kv4yNDb/TE1N/x4gIv4qJyn/JSIj/zo3N/44NTb/MzAx/zY1Nf8/Ozv+OTY2/zk0Nf88OTj+ODQ0/zIv
        L/8kICH+FxIS/xoVFP8fGxr+HBgZ/yIfIPwyMTQWAAAAAAAAAAAAAAAAiJeaDlZcXvyRko3/qqql/5uc
        mP6Jiob/fHl0/4SJh/5tbGr/ODc3/0BDRv9ETVP+P0JE/0BERv4+QEP/PD5A/zY0Nf4/Ojv/paWh/32B
        gP47ODj/bGxr/2xtbf42NTX/Li0t/ysqLP4vKyz/JiQk/zc0NP41MzT/MS4v/zMyMv82NDX+NzU1/zw5
        Of89Ojr+Pjo6/zs4OP8uKyv+Eg0O/xMPD/8TDw/+FhES/xwaG84AAAAAAAAAAAAAAAAAAAAAm62yOFda
        W/6FhYP+kZKP/q60sf5ITlD+Z2hm/qquqv6Af3r+Pz4+/kFFR/5BRkn+QUVH/j1BQ/48PT7+PT4//j1D
        Sf5KRkb+e3l2/oWHhv5fWVf+c3t+/lBSVP6gqav+NDM0/iwoKf4xLi/+Kygp/jUzNP4xLzD+MS4v/jAu
        L/41MTL+NzQ0/jg1Nf47Nzj+PDc4/jw4OP44NTX+JiMk/iIeH/4hHR7+Hxob/ikmJ9kAAAAAAAAAAAAA
        AAAAAAAAkaSpZUhISf55eHb/iouH/6WrqP5canb/gIyQ/3R4d/5kYmD/fX9//4qRkf9xeHn+ZWpr/2Rn
        aP5cX1//UFNT/z1DSP5fXVz/l5WT/1VUU/5EQkH/iYiE/3l4dP4/QkP/Hx8g/yAgIf4qKCn/Mi4v/zg1
        Nv46Njb/MzIz/xUWF/8RExT+ExQW/xkaG/8gISL+Jyco/ykpLP8qMjj+IyAh/yclJv8xMDD+MTAx/zk3
        OcEAAAAAAAAAAAAAAAAAAAAAgpaekTpCRv5JWWb/Pz8//0RERf5DQ0T/XFxc/2NiYf5HRkb/TElJ/2Bh
        X/9RUlP+VlZW/2NkZP5pa2v/VVdW/zo4OP5pZ2X/oqim/0VPVP5FSk7/bXFx/09MS/43NDT/ODY2/y8s
        Lf4pJyf/NTIy/zk2Nv44Njb/Ly0u/wcCA/8FAwP+BQMD/wYDBP8GBAX+DA4O/xUcHv8wPEH+CQcH/wsJ
        Cv83Nzb+NDQ0/zs7PIUAAAAAAAAAAAAAAAAAAAAAdYqQvkBIS/5IfZH/Spiy/0ikwv5Gnbv/Qoef/0Bl
        c/5AQkX/hYSA/3+JjP89R1H+PDk5/zw5Ov45ODj/jpCP/1FPT/6CgoD/gYB+/2BjZ/5zdnn/X19d/1hW
        VP4wLy//LSwt/y8sLf4oJSb/Ojg4/zg2Nv42NTX/Li0t/xISEv8PDQ7+DgwN/wwLDP8NCgv+CwkJ/wgF
        Bv8KBwf+DQkK/xcUFf8zMjL+Ojk5/0A+QEcAAAAAAAAAAAAAAAAAAAAAb5Od6lexyf5Vv93+UrfX/k+w
        0f5LqMn+RaPB/kCatv47f5n+QktQ/j07O/44Njf+OjY3/jQzNP4rKSr+XWNm/kNERf5NUFH+e319/jY2
        N/6anZv+Ozo7/omMi/48Ozv+HyEj/jMvL/4oJCX+OTc4/jk3N/44Njb+NjM0/jY0NP4zMjL+MS8w/jAu
        Lv4tKyv+JiQl/ioyN/4SFBb+DAcI/hQREf47ODn+PTw8+j8+QA8AAAAAAAAAAAAAAACgztkZfdLl/l7L
        5P5Yw+H/VbTXrWOw0FBfp8ZTUp68tESevP4+mLT/OHWM/z8+P/87OTn+Ojg5/zIxMv43Njb/TVJU/z5A
        Qf4mKCr/Q0lM/wsICf4+RUj/HRwd/zAyNP4vLC3/MzAw/zAtLv4vKyv/NTQ0/zU0Nf43NTb/NjU1/zQy
        M/8yMTL+NDIy/zUzM/81MzP+Liss/xgYGf8SEBD+Ew8Q/x8cHf87ODn+Pz4/zQAAAAAAAAAAAAAAAAAA
        AACx5fFFctLo/17N5v5bxeT9X7vdHgAAAAAAAAAAaKjEK0yjwf5Eor3/O46q/zxESv9wbmv+f397/0tf
        bP5GQ0L/KCQl/ysnKP4lISH/NDIz/xwZGf4/PT7/Kygp/zEvMf5EQ0T/IR8g/0NDRf43MzT/ODY2/zo3
        OP47ODn/OTc3/zg3N/84Njb+NzU1/zc1Nf82MzT+MC4v/xsZGv8VEhP+GBQV/ysoKf86OTn+QT9AkQAA
        AAAAAAAAAAAAAAAAAACm2uVxbM3h/l3M5P5Yx+X+S7nf7E653qZOsdaoTKfJ70ysy/5HpsH+PY6p/jlC
        Sf5nZWP+Y2Ng/kE9Pf5LSEf+OzU1/j45Of48Nzf+ODMz/jcvMP4zLS3+MCoq/ismJ/4pISL+Ixwd/iId
        Hv46Njf+NjQ1/jQzNP40MzT+NDIz/jMyM/41MzT+NDM0/jQyM/40MjP+MS8w/i8tLf4lJCT+JCIj/jo3
        N/49Ozv+QUFDVAAAAAAAAAAAAAAAAAAAAACDqLCeYa+9/1/I3v5ezOT/WMnl/1DD4v5MvN3/UrnX/1C0
        0P5Ho77/N3OL/z5FSf9lla3+TF9o/0VDQv4/Ozz/PTo6/0RFRf5DQ0P/Pzs8/0A+Pv5ERET/Pzs7/0JC
        Qv5CQUL/Pz0//0A8Pf4+Ojr/RkND/zs6Ov5FSEv/Ozs8/zo5Of84Nzj+Nzc3/zo4Of85Nzf+Ojg5/z07
        O/89PDz+Pjs7/zw7O/9EQkP7RkVJGAAAAAAAAAAAAAAAAAAAAAB3kZbITF9h/2m7yv5tz+L/a9Hm/2jP
        5f5ny+H/YcLZ/1ayyv5EkKf/NUZT/zQ7QP9hj6b+QVVf/zs6O/5BPz//Pjw8/0A/P/5CQEH/QT4+/0E/
        P/5ERkb/QDw9/0dERv4+ODj/Pzk5/z04OP48Nzf/VVFP/zk3OP5GU1v/PVtq/0OWs/9JlbH+T4af70Zh
        cWU8Tlh7PE5YlkJYZfQ+Tlf+PEJH/0A/Qv9LSkx8AAAAAAAAAAAAAAAAAAAAAAAAAAB7i48sYmxuUmeB
        hmmIy9iBitfomYjW57CG0+PIesDP4FiIk/VCSlD+Umx5/kJERv4+PD3+Pz0+/ktJSf5jZGT+Xl1c/lJQ
        UP5wb27+S0hI/mdmZv5QTk/+TUxN/kVDRP5EQUL+QUFB/j87O/4/Ojr+Q0BA/j47O/48Ojr+O19v/kei
        wf5QsdD+VbDS/k+u1eNGq9OtP6fQz0aw1/5dyOT+ac/m/m+1yYZVYmsKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRkawNaYWYRXGJmKFdbXz9UV1tXUlRXb1FS
        VIZQUVOeUFBStUxNTsxKSkzkR0VG+EpISf5OTEz/S0pK/2JiYf5HRUX/ampq/1JPT/5eXVz/QT0+/z88
        PP5CQkT/PlBb/0ugu/9Vt9P+Xr/c/1jA3/9Qvd/+T7zd/1zH4v9hyeH+asjc/3zJ20wAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1VZA19kZxJYW14rWVxeQVVXWVpaXF5vVFNWiVNT
        VZ5QUFG2TExOz0pKS+dNUVb8SlVd/0tsdv9kt83+asjf/2zM4/9qzuX+aM3k/2jJ3v9lv9L+WYyV/WuQ
        mBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLT1MDUVdaGFNdYjBji5hGfcjcXX7P5HR/0OWLfM7io2mq
        ubxSanDTVFhaygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD4AP////8AAPgAAH///wAA+AAAAD//AAD4AAAAAA8AAPhg
        AAAAAAAA8CAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAABhAADwAAAAAAEAAOAAAAAAAQAA4AAAAAAB
        AADgAAAAAAEAAOAAAAAAAwAA4AAAAAADAADgAAAAAAMAAMAAAAAAAwAAwAAAAAADAADAAAAAAAMAAMAA
        AAAAAwAAwAAAAAADAADAAAAAAAMAAIAAAAAABwAAgAAAAAAHAACAAAAAAAcAAIAAAAAABwAAgAAAAAAH
        AACAAAAAAAcAAAAAAAAADwAABgAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAfAAAAAAAAAB8AAP8A
        AAAAPwAA///gAAA/AAD////8AH8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>