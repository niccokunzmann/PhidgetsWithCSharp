<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="supplyVoltageTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE+G
        nxBbjKAlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6RkoIRlRZI1FhZ0VaaW9mWGlvhlFk
        bapMaHbOU5ex7lWpyf1Mjqb6gqm3DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        l/+FdH3uUJ/B4HeuxKsAAAAAAAAAAAAAAAAAAAAApYWD9aB+bf6Qclj+XD8v/i4TFf5JNzT+Ymdo/jA2
        N/4kKir+ICYm/h0gIf4bHh/+HR8h/iseIP5PIiT+h2RH/oZnUP5RMin+MBIU/ktOVP5YX2f+VCkt/px8
        av6jhnL+hGNW/mlFRv5OMzf+Pj9C/jo8Pv48PT/+Q0ZJ/kZJTf5TVVn+YGtz/j1PWf5kdoP+kXl+/tnf
        4v7V3OD+1dzf/sjIzP57j53tT7rXy3KvxZQAAAAAAAAAAAAAAAAAAAAAm3V69qF+bv6Udl3/YEMw/zMT
        Fv5CLi//cXd4/xcbHf8RFRf+ExcY/xIVF/4RExX/ERIU/yoYG/59WVX/p4t4/62Ug/50UE3/ZENE/0Y9
        QP5eYmv/iWVk/8vIyv7i5un/2t7i/7OmqP55XWH/Vlld/1ZaXv9VVFf+V1dZ/1pfZP9rbnL9YWpx9ERV
        Yf9SY23+dnqB/6ynrP+3trz+ubW66qWXnVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJgIIBpoiG96F/
        b/6Ka1j/Z0k2/z8gHv5IMC7/SU1Q/xEUFv8RFRb+ExYY/xIUFv4PEhT/DxET/0Y1N/6hioz/1trf/9/l
        6P7c4eX/oY2Q/2pdYf5eZG3/jHl+/9nd4f7i5+v/5evu/83M0P2IeoHHbXN7p2pscYdzfIRndHZ8SHd8
        gyl2eoAMmqOrKL/L0/7Bzdb+xdDZ/8LP2P/Azdb+1dzg2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACIf4ABoYGB966Th/68rKL+rJiS/oVoZP5eS03+Qlpr/hAUFv4SFRf+EhUY/g8TFf4OEhT+DxET/h4a
        HP6Vg4b+3ePm/uDm6v7Z3eH+saWq5nt2e594g4x/gomTYKGVnFaqoad8pZmgcqWWnC0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMLP2NvG0tv+x9Pc/sfU3P7F09v+0drg5AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB/dHQBnIB/8trf4v7a4eX/2+Lm/9PW2v5uZHH0OIat8REVF/8SFRf+EhYX/w8T
        FP4PExX/EBMU/xATFf4XFxn/Ny4y/2FaX/6ViY5Zo5ecCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMfU3JDG1Nz+xtPc/8fU3P/F09v+yNXd8AAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoI2SVcC7v+DNz9P+ycrP/rayudiBjJxgW3+TVBMY
        G/8RFBb+ERQW/w8TFf4QExX/ERMV/xETFf4RFBb/FBca/z5CRv6Jio0qAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrW3jzE0ty6xNLbncXT
        23/E0dpgyNTcOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSLkAGTiY8dkoiOGgAA
        AAAAAAAARkxTKRYZHP8RExX+EBMU/xASFP4RExT/EBIU/xESFP4RExX/FRga/0JFSP6Zm55LAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAO0BHKRUYG/4QEhP+DQ8S/g4RE/4QExT+ERMV/hATFf4SFBb+NDY4/lpe
        Yv6UlphMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALjM6LxYYGv8QEhP+DhAS/w4PEv4QEBL/DxIU/xES
        FP4SExX/Ojs+/2Nna/6QkZROAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSsyMhQXGv8PERP+DhAS/w0P
        Ef4MEBL/DRAS/w4SE/4QExT/Ojw//5SYm/6foaRTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJy00MhQY
        Gv4OEhT+DhET/g0SFP4OEhT+DxMV/hAVFv4RFRb+Njo8/ra6vP6go6ZIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAOkFIKxcdH/8aHiD+HyQm/yYrLf4tMjT/MDU3/y81N/40ODr/Q0ZK/7K2uP6hpKcLAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVl1jCEhOU+08QUT+NTo8/zc8P/4+QUT/P0NG/yYsLv4jKCv/QEVI/5CU
        l/6eoaMRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFpb48zOj3+DBEU/g0UFv5HTE/+TFNW/iQq
        Lf4aICP+O0FE/mxwdf6WmZwfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHJ5gB9YX2P4QEZJ/0VL
        Tv5ZXmP0WWFl2FxjZ7lhZmuZZGluemhuc1x8f4QMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB1eoAycXZ7L3B1ehVjaGwCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD//////58AAP////+ADwAA////gAAPAAD//4AAAA8AAP/A
        AAAADwAAwAAAAAAHAAAAAAAAAAcAAAAAAAAABwAAAAAAAAAHAACAAAAAAAMAAIAAAAAAAwAAwAAAAAAD
        AADAAAAAAAEAAOAAAAAAAQAA4AAAAAABAADgAAAAAAEAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAA
        AAAAAAAA8AAAAAAAAADwAAAAAAcAAOAAAAAADwAA4AAAA/wPAADgAAH//A8AAPAAA//8DwAA+MAD////
        AAD/wAP///8AAP/AA////wAA/8AD////AAD/wAP///8AAP/AA////wAA/8AD////AAD/4AP///8AAP/g
        A////wAA//D/////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>