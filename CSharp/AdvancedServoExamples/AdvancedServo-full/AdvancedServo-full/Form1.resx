<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrl6q2ZZ+6um6n
        xZ9pob6FYI6pbF54kFBNWms2PkRQGjc8RAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIen
        txpFe5P+OZ3C/jWex/44nL/+O32b/myAjv5IUVn+SlFY/kxUW/hPWmTiUFhfx1VcY6xHT1mQTlVddE5S
        W1hHTFU9PEFJIjY5QgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIi2yVZBqcn/NI+8uTJ6pycteKHDKoaq/0heav8tMDP+LzEz/ztBRf5SX2b/HCMm/1RZ
        XP6xvMT/nKex/5Wgqf6Tnqb/jZef/3yEkP5udX7pZW10zlpgZbNYXmOXVlxhe05UXGBES1NERElPKT1C
        Rw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGuLmZM1ka7/HH6l/g1Vgvcfa5P+IG2T/yk4Qv94f4H+GCAl/0xS
        Vf5rcnT/HSQo/2Noa/7EztP/r7a4/620t/6psrX/pKyx/6Oprv6ZnqT/s7zD/1lfY/42Nzb/R0hG/1FV
        Vf5XXFz/Y2dm/2hsbP1yeXzwWmJl1V5kaLleZGieYmhsgl1ka2ZYXmNLSE1UL0FKUxNAT1sCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFliaNAuRlX/KF14/yBbev4rWHL/Kz5K/zQ5
        O/91gIX+Sl5v/0pdbf5SXGH/Iykt/2Noa/68x87/coKL/4eVnv6Hl6D/fY2Y/3aDjv5xeoT/pq+2/1Nb
        Yv4WGBn/Jicp/yYoKf4oKSr/Jikq/yUmJ/87QED+CBEH/wYNBv85Pjf+KTIr/1hiYv8tNzT+N0FA/0lW
        W/5UanjzXn+R2mmbsr1vo7yfdZ+0g3uYploAAAAAAAAAAAAAAAAAAAAAeoSJEHB4fPudp6P+Vl5V/mZr
        a/5pbWv+QkZF/nl8ef4mKiz+cnt+/kVOVv4pLjH+PUNG/kRMUP7By9L+PVNl/rnCxv7M0dP+y9DS/r7E
        x/5CU2L+fouX/mZudf4ICg7+Jycp/hwbG/4TERH+ExQV/iMlJv4nKCn+DRAL/gUIA/5cXlT+GSAV/gwW
        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
        AAAAAAAAAAAAAAAAAABSV16whIiN/tjc3v7Y3N7+v8LF/m9qZfg4Oz7YNTk+/nx+ff56fH3+j4l+/mZl
        ZMkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeYmtnm52h/tne4P7V2dv/vcHD/1JUW6M8QUjWpquw/8/W
        2v7O1dn/rrW5/4yGf8YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHJ5TbGsqJurqaahaWxzZmlt
        dARnaW9on6Cg+7rAw/69xMj/fYOJ9mlpblAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAqqahHKumn1h0d3tXbnJ6FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAPwB/////wAA+AAA////AAD4AAAAf/8AAPgA
        AAAAHwAA+AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAEAAOAAAAAAAQAA4AAAAAAB
        AADgAAAAAAMAAOAAAAAAAwAAwAAAAAADAADAAAAAAAcAAMAAAAAABwAAwAAAAAAHAACAAAAAAAcAAIAA
        AAAADwAAgAAAAAAPAACAAAAAAA8AAIAAAAAAHwAAAAAAAAAfAAAAAAAAAB8AAAAAAAAAPwAAAAAAAAA/
        AAAAAAAAAD8AAPAAAAAAfwAA/AAAAAB/AAD8ADgAAH8AAPwAOAPA/wAA/AA+B///AAD8AD////8AAPwA
        P////wAA/gA/////AAD/+H////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>