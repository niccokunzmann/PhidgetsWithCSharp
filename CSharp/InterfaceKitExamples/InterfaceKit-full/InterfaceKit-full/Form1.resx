<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6QzEQQU8zIEtZPjFNVEtEU1tbV1hf
        YGljaWZ2bHVuh3yGiZaImpenhJiQEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuPlsFLkJpEjVI
        ayRSV184Xl9gSl5hYlxjZ2dvY2hpgWVqa5Bna2yganBwsmtubcRaXl7XVFhZ6U5WVfs/TCn+N0kQ/jdN
        Jf4yOSn+OT5B/jxRR/5skTr+aYU7/muJO/54nkf+aHdlMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAUV1iBlNeYhZVXF4pXmNmO2Zpak1sb25gc3h3cnZ8fIV1e3uXcHRyqWhtbbZiZ2nIWFxg20ZR
        Ze1AVHP5NUlt/jJDYf5GU1z/VFda/6Cqr/6WnaL/o6yx/6uzt/6ttLb/uMLF/42TlP8mJiv+KSkt/ywy
        Ov8tLTL+KTpD/ydIVm4pS1mxUldW/1JfQ/91oS7+eZ07/3qePv+FsEv+bHxjRAAAAACXqKR/f4mEmHiB
        d6xyemy/cXpuzWFoZ95faGrvXWpu+1piZP5SV1j+SVdf/j5ARP47PED+NEBK/jAvNP48P0X+QEdP/kVF
        Sf5LU1r+Vlda/mRiY/5qb3L+b25u/m1rbP54eHf+YGFk/qCqsf5yd33+fImS/oaVnf6FkJf+kJyi/pif
        n/4pKS7+LCww/i8tMf4jJCr+Ji0y/iEyOPslNjv+Oz5B/lFdQ/52oyv+eZ49/nueQf6WxVv+Y3VXWQAA
        AACRsWnde580/4GnM/5wmCD/apFH/1dYUv5CV1z/MlhnljFUYtI4OTr/WVZW/3VzcP+FhIH+c3Fw/3l4
        dv5fXV3/dXRz/3p5eP5cWlv/f358/0A+Qf5JR0n/NTM1/zIwM/4yMDT/SktP/4uZpP5rdn//0NfX/87V
        1v6msbf/ZXN+/5+mpv8qKjD+LS0w/y8uMv8yMDP+JiYr/yIjKv8nJy3+NTU2/0BFNv92qyj+irRG/5C6
        Wf+03Yf+eo9ncAAAAACcw2PIgqk1/4GoMv52oCD/eaM0/ystK/45QkT/Ijk+9yk+RP0uLzL/NTI0/zYz
        Nf82MzX+QD0+/0E/QP5PTE3/ZGNj/2tpaf5XVVX/YF5e/0A+P/5YVlf/NTE0/zQxNP4zMDP/TU5T/7rG
        zv54hpH/i5yo/5Slr/6Xpq//s7/G/46krv9UcoP+Pj5A/01LSf9EQUH+NDEz/z46O/97eXH+Pz08/0RE
        QP98rCn+h6pK/3WVNP+64Y3+gJhphgAAAACezVueg6w0/oGoMP6HuCb+dKgZ/kRIOf5FREP+KCgs/ikn
        LP4tKy/+ODQ1/jYzNP43MzX+bmtq/nt6ef5nZGP+cG5t/mlnZv5PTE3+VFFR/lRRUf5LSEj+NjI0/jUx
        NP40MTP+VWZx/pijsf6Tnav+kJur/o6YqP6Klqj+ipms/oKbq/5hfYr+Q0RI/lpfYv5KUlb+NTE0/jYy
        NP55d2/+Qj8+/khGQ/53pCf+l8Bb/pKvav674o/+eJNcnQAAAACw2HlqmMNT/5axXv6TyR3/da0K/z9M
        Jv5MSkX/YF1Z/2ZkYP44NDT/NzM0/zczNP83MzT+UExM/3RycP5XVVT/V1RU/2xpaP5ubGz/amhn/25r
        av5YVVX/ODM1/zgzNP42MjT/Pz1B/5Ssxf6UrMf/m7LK/6C1y/6jt83/pbnO/52tt/9YVlb+T09R/3KE
        lv9WgZX+NzY5/zYzNP9zb2b+QD08/z48Ov9giCH+kMFH/4OsRf+64Y3+iKRmswAAAAC224o6nclS/3qi
        Mf6WzCH/baUE/0VbHv41NTH/S0lH/2lnY/43NDX/NzQ0/zc0NP84NDT+PDc4/09MTP5sa2r/Xlxb/3x6
        eP6FhIH/g4KA/2RiYf5zcXD/OTU2/zg0Nv43NDX/NzU4/52xxP6juM7/qr7R/67B0v6twdL/qb7S/5uu
        u/9UX2T+O0JI/zBfdv9BV2L+PU1X/z1LU/9RTkv+REE//1lXUP9ihR/+ibVH/2eBP/+z24P+jq1qyQAA
        AACkwYQRptRh/HiOUv6Swjn+d68F/k9xFf5YWE/+REJA/np5c/44NTX+NzQ1/jc0Nf45NTb+R0RE/mBd
        W/58e3j+aWlo/lpiZ/5CP0D+Qz9A/jk2N/45NTb+OTU1/jk0Nv44NTX+OTY4/pKjs/6nvND+r8PU/rbJ
        1/6xxdT+rcLU/qrAz/5ic3v+P0hO/jg1Nv44NTb+NjM1/jYzNf43NDT+OTY2/kpIRf5Ydxj+kcI8/qC8
        ff6u1nr+iqpk3wAAAAAAAAAArthx2JfAUv6ayUX/fLMG/2WSF/5PUUf/TEpH/4WDfP48Ojr/PDk5/z46
        O/9ZVVL+a3iF/2JzjP5xe4n/WWyG/3V0df5LR0j/Uk9P/zs4Ov5pZmT/RkZG/zo2N/46Njf/OjY4/5Cc
        p/6wxdb/tcrZ/7rO2/66ztv/t8zZ/7XK2P89P0H+ODU2/1tYV/9LSEf+S0dD/2dkX/88Ojb+Pz05/0dF
        Qf9KYx7+jL4w/4ClQf+s123+m7x09FtmTwEAAAAAr9l3pXijKv6ItjP/h74T/2icEf4uMCn/ODU0/2Ff
        W/5dXlj/enlz/29vbf80MjL+OTYz/y4rKv4vLCr/Mi8u/21ub/5VUlL/iIqH/2xydv53env/foF//zw4
        OP46Njb/Ojc3/36Gjv6itcb/orXH/5+zxf6csMP/mq/C/6K3yf9ESk/+eXx6/2tub/99fXr+Pj4+/3Nz
        bv8/Pjz+RkQ//15cVf9ccC/+jr43/3yPYP+gx2z+pcZ8/WNyWQ4AAAAAsdeAfYizUf56lVT+jcYW/m+m
        D/47Qyv+UlJO/jQyNP5nbmn+WF9j/ldZWv5qbWr+ODIw/js0Mv4+NzX+TERC/n2Agf5IR0j+e3x6/m1w
        cv53e3z+bm1s/kZCQ/47Njf+PUFG/nmJk/6itcX+nK68/pChsP6HlqT+foyZ/paiq/5BQUH+MC0s/mNl
        ZP52dXP+fHpz/nV8fP42ODr+XFtT/ktIRf5RYzH+h7ko/qHCcP6v1Hr+pct3/mZ0WCAAAAAAtdmOSqHQ
        Wv6OvE//kMYv/2+nD/5DViX/ZGRf/zUzM/6Gin//YGJf/4qMhv9vc3H+R0A//05NTf5KSUn/SkNA/3N0
        df5JR0n/h4eE/3V4eP50e37/gYOC/1FOT/5bXFz/PD0//2JkY/5GR0n/bW5t/29vbf5samj/aG9y/2xx
        c/9JR0n+Q0BA/2lqaP9weHr+Zmlq/5SUjP9IRUP+SEY//0NAPf9KVjD+eawi/4qwTP+hy2T+td5//2l4
        WjMAAAAAudOgG6PPaP54mUT/ksQ6/2qiCP5LaRj/MjEx/zQxM/5obGb/RE1R/3l7ev9laGb+SURD/0tJ
        SP5HREP/R0A+/2tsbP5eXl7/d3d1/2dnaP5laWz/eHt6/11ZV/5LRkX/OTQz/0NBQf49PD3/OTMy/0hE
        RP5oaGf/bXJz/2RlZ/9KSkz+Q0FC/19gXv9tbGr+iIqI/1lXVP82P0P+NT9E/lBQTf9OVDn+gLQU/3+f
        TP+LsVP+t+CB/2x7XEkAAAAAAAAAALDafOeIpWD+mcRe/n+zB/5Tehf+XV5W/jIxMv5gYlz+Vlpa/oCB
        f/50dXD+TktK/khERP5IRET+RD08/mVmZf55enj+c3V3/kJPV/5PY27+bnJy/lhXV/5FPjz+SkZE/kVE
        RP5MTEz+SUNC/kBESf6Hh4X+Wltb/llbXv5QUVL+QD9A/lZXVf5dW1r+dnVt/iosLP4iNz6yHTI6oTdB
        QP5ISjn+dKoN/pfBT/6Xvlf+ueKE/lxuSmAAAAAAAAAAALPahbmSukj/mcBO/320Df5hkRH/PT41/05O
        S/43Q0f+NT9E/0tIRv9UU1H+V1ZU/0ZDQ/5CPDr/QTs6/15dXP5paWj/dnZz/yclKP41MjT/TFFV/zU1
        OP5fYWH/Xl5c/1lYV/5mZWP/Xl9d/0xJSP55d3P/S0dG/xoWGP9RT03+R0dJ/0VDQP8ZExT+UU9K/w0G
        Cv8dHx/+KjAw/w8KCv8XFBH+Z5sI/4ayPf+DsD7+ueKC/3aMXXYAAAAAAAAAALLYhYmPtVH/hahG/4vC
        IP5imAn/MDMp/z5FRP4fNjyiHjQ7ryMnKP8uLC3+WltZ/0NBQP5BOzr/Pzk3/09MSv5cW1r/KCMl/w8J
        C/4QCQz/EAsN/yEdH/4oJSX/WlhU/0NISf4/PT7/YF5a/01NTP4aExX/FRIW/ystMf88P0H+JSUn/yMi
        Iv8cFBP+LDI0/xoaG/8mKCn+ICUm/xAMC/8fHBb+ZZME/4u0S/94k07+u+SG/3OLVooAAAAAAAAAALDX
        g1abxF7+jaNc/o/FK/5zqBD+KzMV/i4rKP4VGxz+Fhoc/iUhIf45ODf+QkFA/jw1M/47NDL+OTMx/jk0
        M/4vLS7+GRAQ/hwbH/4dHB/+NzY4/iwuMf4YFBb+HhcX/iIrMf4VFhr+GyAk/h0kK/4jGhj+HRYY/h0f
        JP4mLDD+GRcY/h8gI/4OBwj+IR8e/hYRE/4aGRv+GRoc/g8KCf4UEA/+V4EJ/prKSP6Ru13+uN6G/kpY
        PJ8AAAAAAAAAALjVmiWl02D/j7RS/5fKOv50qg3/JTML/xkSD/4bHR3/FRQV/xkdH/8TGR7+EAsL/x0W
        Ff4TEhf/FxYb/xELDv4gIST/EQoL/xkTFP4bGh//IiMo/x8fJf4UDQ//EwoN/yEeIf4aFBT/Hxoc/yEd
        Hf4UDQ//FxAR/xsUFP8XEA/+Fg0O/xYODv8MBQf+FAwN/xcQEP8aExP+HRcW/x8YGP8gHBr+LS8g/4az
        Pf9rljL+fpda/0RDQLQAAAAAAAAAAJ+zigWt13jyhaJM/5jGSv5sowX/JDAK/wwGBv4ZHB7/ExAS/xsd
        IP8cHyP+DwoM/xAJCv4eGRj/GxUV/xcQEf4WEBD/DAUI/xYND/4WDg//GBAS/xwVFv4dFhb/GhQV/yQc
        HP4kHR3/Jh4f/ykiIv4nISH/LScn/zMsLP82MC/+OjMz/z85N/82MTD+Qjw7/0I8O/9FRUX+Qj48/0Q/
        Pf87Nzf+Qj48/0NGRv9KUlX+RUE//1JOTMoAAAAAAAAAAAAAAACKoW/hkK9b/5O4VP5mjBT/GxoR/woF
        Bv4XEhH/GxYW/x8ZGf8hHBz+IRwd/yAcHP4tJyf/Lyko/zIsLP43MjH/MCsr/z45OP5AOzr/REJC/0I8
        PP5CPTz/ODMy/0I8O/48Nzf/SVBU/0M9PP5AOjn/OjU1/0U/Pv9JTlL+R05S/0Q+Pf86NDP+Qz08/z87
        O/9GVVz+QDw7/0I9PP9APDz+QT08/1JUVulET1X+Qz8+/1JPTtkAAAAAAAAAAAAAAABSVU3hb4pC/mqC
        Qv5JTDz+QT07/jQxMP5CPj3+QDw6/khMTv5APDv+QT08/jMwL/5CPTz+ODQ1/lVgZ/5EPz7+NjIy/kM8
        PP4/Ozv+Sltk/jo4Ov5CPTz+ODMz/kE8O/5DP0D5Q1Jb/EM+Pv4+OTj+S0hI9T86Of5bXV6zTFRZ0z05
        Of04NTb+NzIx/lJQUaxmcXZrT1BSlDEtLfdSUVHaNDIz0WJlZx9gZmoXQkNFek5LSugAAAAAAAAAAAAA
        AABRUFGoRUJB/zEwMP5PXWT/REE//zYxMf5CPTz/QT49/0lXXvw8PD7+QTw7/zQvL/5AOzn/TUpK30xV
        WuBGQkL6NzEx/zs2Nv5EQUHtaXBzalBSVpo4MzTlPTk6/zEtLftYWVpWcHh+NVNTVnEvKiv/WFZYvz88
        Pb1aXF0IAAAAAEdGSG89OTr+ODQ1/0tJSmFFSEo1Q0RHTUZCQ/BaWVrFUU5N6To6PZI7OzybSEVF0ldU
        VLsAAAAAAAAAAAAAAABcXV5vPTo6/1dVVshcZ2yVSEdH3DIuLv41MjL/Pzw90W52eCpZYGRdMjAx1jEt
        Lv40MDH2WVlaJAAAAABLTVA2MS0u/0I/Qf5LSUmRV1haG0lJTSxBPkC+T0xO90Q/QP4+PD5/NjU4dUdE
        RZ5JRUXqZmVndk5LTOs+PD3XPjw+5EVBQvliYGGJX19gelBOT9BHRUbFT01OtVxbXIZjZGYEY2NlV1ZV
        VmlcW1xbYF9gS2VlZhIAAAAAAAAAAAAAAABscXMzQT4/+11dXRhcYGMBU1VXPDQwMf5JR0j6SkdHuz9A
        QVs6Oz5tR0VG2E5MTtpNSkrmQD0+wj07PcFCQULkU1BRymZmaWFLSUroRUJE20dERstTUFG6cnFyI2Jh
        Y1BPTE2LWVZXgFRRUnFnZmc5AAAAAHJzdSVnZ2kmbW5wGGNjZQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhZWcEV1dYv0JAQfE/P0DvSUhJ5GJg
        YZ5oaGojUVBQplFPUJ5UUlOMWFZYdm9wcA5sbW8kW1pdSGJiZTZoaGshbGxuCAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcnV3CWdo
        ag5aWlwCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA//////ABAAD///gAAAEAAP4AAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAB
        AAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAA
        AAAAAAAAwAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAMAAAAAAAAAA4AAAAAAA
        AADgAAAAAAAAAOAAAAAgAAAA4ABAAAAAAADgAAABD/8AAOAAD////wAA8f//////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>